# Various printf tests compiled from various sources
# Copyright Â© 2013 Bart Massey
# This program is licensed under the GPL version 2 or later.
# Please see the file COPYING in this distribution for
# license terms.

# Please see the README in this distribution for a detailed
# description of this file.

# Regression tests from GHC
   1 "0.33"                  "%.*f"          2 0.33333333
   2 "foo"                   "%.3s"          "foobar"
   3 "     00004"            "%10.5d"        4

# Tests from NPM
   4 " 42"                   "% d"           42
   5 "-42"                   "% d"           -42
   6 "   42"                 "% 5d"          42
   7 "  -42"                 "% 5d"          -42
   8 "             42"       "% 15d"         42
   9 "            -42"       "% 15d"         -42

  10 "+42"                   "%+d"           42
  11 "-42"                   "%+d"           -42
  12 "  +42"                 "%+5d"          42
  13 "  -42"                 "%+5d"          -42
  14 "            +42"       "%+15d"         42
  15 "            -42"       "%+15d"         -42

  16 "42"                    "%0d"           42
  17 "-42"                   "%0d"           -42
  18 "00042"                 "%05d"          42
  19 "-0042"                 "%05d"          -42
  20 "000000000000042"       "%015d"         42
  21 "-00000000000042"       "%015d"         -42

  22 "42"                    "%-d"           42
  23 "-42"                   "%-d"           -42
  24 "42   "                 "%-5d"          42
  25 "-42  "                 "%-5d"          -42
  26 "42             "       "%-15d"         42
  27 "-42            "       "%-15d"         -42
  28 "42"                    "%-0d"          42
  29 "-42"                   "%-0d"          -42
  30 "42   "                 "%-05d"         42
  31 "-42  "                 "%-05d"         -42
  32 "42             "       "%-015d"        42
  33 "-42            "       "%-015d"        -42
  34 "42"                    "%0-d"          42
  35 "-42"                   "%0-d"          -42
  36 "42   "                 "%0-5d"         42
  37 "-42  "                 "%0-5d"         -42
  38 "42             "       "%0-15d"        42
  39 "-42            "       "%0-15d"        -42

# These tests are undefined.
# 40 "42"                    "%d"            42.8952
# 41 "42"                    "%.2d"          42.8952
# 42 "42"                    "%.2i"          42.8952
  43 "42.90"                 "%.2f"          42.8952
  44 "42.90"                 "%.2F"          42.8952
  45 "42.8952000000"         "%.10f"         42.8952
  46 "42.90"                 "%1.2f"         42.8952
  47 " 42.90"                "%6.2f"         42.8952
# Technically, this test is undefined according to the
# doc. "If a precision is given with a numeric
# conversion (d, i, o, u, x, and X), the 0 flag is ignored.
# For other conversions, the behavior is undefined."
# 48 "042.90"                "%06.2f"        42.8952
  49 "+42.90"                "%+6.2f"        42.8952
  50 "42.8952000000"         "%5.10f"        42.8952
  51 ?                       "%c"            -100
  52 ?                       "%c"            2097152

# glibc printf fails this test, returning "%"
# haskell printf fails these tests, since no indexed arguments
!CH 53 "%1$"                   "%1$"
# This test is not obviously defined.
# 54 "%0$s"                  "%0$s"
!H 55 "Hot Pocket"            "%1$s %2$s"     "Hot" "Pocket"
!H 56 "12.0 Hot Pockets"      "%1$.1f %2$s %3$ss" 12.0 "Hot" "Pocket"
# glibc printf fails this test, returning "42"
# However, the printf(3) spec does not allow mixing positional and
# indexed args like this, so it is really not a valid test.
# 57 " 42"                   "%1$*.f"        3 42.0

!H 58 ?                       "%2$*s"         "Hot Pocket"
# haskell correctly reports an error
!H 59 "%(foo"                 "%(foo"

  60 " foo"                  "%*s"           4 "foo"
  61 "      3.14"            "%*.*f"         10 2 3.14159265
# This test is undefined. See test 48 above.
# 62 "0000003.14"            "%0*.*f"        10 2 3.14159265
  63 "3.14      "            "%-*.*f"        10 2 3.14159265
  64 ?                       "%*s"           "foo" "bar"
  65 ?                       "%10.*f"        42 "foo"

  66 "+hello+"               "+%s+"          "hello"
  67 "+10+"                  "+%d+"          10
  68 "a"                     "%c"            'a'
  69 " "                     "%c"            32
  70 "$"                     "%c"            36
  71 "10"                    "%d"            10
  72 ?                       "%s%s"          42
  73 ?                       "%c"
# glibc printf fails this test, returns ""
# Haskell fails this test claiming that "argument list ended
# prematurely", which is not so reasonable.
!CH 74 "%10"                   "%10"           42
# glibc printf fails this test, returns "10 "
# Haskell correctly throws an error
!CH 75 "10 %"                  "%d %"          10

# Tests from MSVCRT
# Haskell fails these tests due to different floating formatting
!H 76 "+7.894561230000000e+08"        "%+#22.15e"     789456123.0
!H 77 "7.894561230000000e+08 "        "%-#22.15e"     789456123.0
!H 78 " 7.894561230000000e+08"        "%#22.15e"      789456123.0
!H 79 "8.e+08"                        "%#1.1g"        789456123.0

# The arg constant here is not legal C.
# 80 "-8589934591"                   "%lld"         18446744065119617025LL
  81 "    +100"                      "%+8lld"       100LL
  82 "+00000100"                     "%+.8lld"      100LL
  83 " +00000100"                    "%+10.8lld"    100LL
# Haskell correctly reports an error here
!H 84 "%_1lld"                        "%_1lld"       100LL
  85 "-00100"                        "%-1.5lld"     -100LL
  86 "  100"                         "%5lld"        100LL
  87 " -100"                         "%5lld"        -100LL
  88 "100  "                         "%-5lld"       100LL
  89 "-100 "                         "%-5lld"       -100LL
  90 "00100"                         "%-.5lld"      100LL
  91 "-00100"                        "%-.5lld"      -100LL
  92 "00100   "                      "%-8.5lld"     100LL
  93 "-00100  "                      "%-8.5lld"     -100LL
  94 "00100"                         "%05lld"       100LL
  95 "-0100"                         "%05lld"       -100LL
  96 " 100"                          "% lld"        100LL
  97 "-100"                          "% lld"        -100LL
  98 "  100"                         "% 5lld"       100LL
  99 " -100"                         "% 5lld"       -100LL
 100 " 00100"                        "% .5lld"      100LL
 101 "-00100"                        "% .5lld"      -100LL
 102 "   00100"                      "% 8.5lld"     100LL
 103 "  -00100"                      "% 8.5lld"     -100LL
 104 ""                              "%.0lld"       0LL
 105 " 0x00ffffffffffffff9c"         "%#+21.18llx"  -100LL
 106 "0001777777777777777777634"     "%#.25llo"     -100LL
 107 " 01777777777777777777634"      "%#+24.20llo"  -100LL
 108 "0X00000FFFFFFFFFFFFFF9C"       "%#+18.21llX"  -100LL
 109 "001777777777777777777634"      "%#+20.24llo"  -100LL
 110 "   0018446744073709551615"     "%#+25.22llu"  -1LL
 111 "   0018446744073709551615"     "%#+25.22llu"  -1LL
 112 "     0000018446744073709551615" "%#+30.25llu" -1LL
 113 "  -0000000000000000000001"     "%+#25.22lld"  -1LL
 114 "00144   "                      "%#-8.5llo"    100LL
 115 "+00100  "                      "%#-+ 08.5lld" 100LL
 116 "+00100  "                      "%#-+ 08.5lld" 100LL
 117 "0000000000000000000000000000000000000001" "%.40lld" 1LL
 118 " 0000000000000000000000000000000000000001" "% .40lld" 1LL
 119 " 0000000000000000000000000000000000000001" "% .40d" 1
#See above.
#120 "-8589934591"                   "%lld"          18446744065119617025LL
# libc fails this, with "" and return code -1 (!)
# Haskell correctly reports an error here
!CH 121 "%I"                            "%I"            1
# The next two tests are locale-specific and should not be used
#122 "1"                             "%I0d"          1
#123 "                               1" "%I32d"         1
# libc fails this, with "%D"
# Haskell correctly throws an error
!CH 124 "%llD"                          "%llD"          -1LL

 125 " 1"                            "% d"           1
 126 "+1"                            "%+ d"          1
# These tests are undefined.
#127 "0001"                          "%04c"          '1'
#128 "1   "                          "%-04c"         '1'
 129 "0x0000000001"                  "%#012x"        1
 130 "0x00000001"                    "%#04.8x"       1
 131 "0x01    "                      "%#-08.2x"      1
 132 "00000001"                      "%#08o"         1
# Haskell has no pointers
!H 133 "0x39"                          "%p"            57VLL
# These tests are undefined.
#134 "  0X0000000000000039"          "%#020p"        57VLL
#135 "0000000000000039"              "%Fp"           57VLL
#136 "0X0000000000000039  "          "%#-020p"       57VLL
# Haskell has no pointers
!H 137 "0x39"                          "%p"            57V
# These tests are undefined.
#138 "  0X00000039"                  "%#012p"        57V
#139 "00000039"                      "%Fp"           57V
#140 "0X00000039  "                  "%#-012p"       57V
#141 "0foo"                          "%04s"          "foo"
 142 "f"                             "%.1s"          "foo"
 143 "f"                             "%.*s"          1 "foo"
 144 "foo  "                         "%*s"           -5 "foo"
 145 "hello"                         "hello"
# This test is undefined.
#146 "not wide"                      "%Ls"           "not wide"
# Haskell correctly throws an error
!H 147 "%b"                            "%b"
 148 "  a"                           "%3c"           'a'
 149 "1234"                          "%3d"           1234
# libc fails this, with "" and return code -1
# Haskell correctly throws an error
!CH 150 "%3h"                           "%3h"
# libc fails this, with a big mess worth sorting out later.
# Note that the given result is clearly wrong.
#151 "jkmqrtvyz"                     "%j%k%m%q%r%t%v%y%z"
 152 "2"                             "%-1d"          2
 153 "8.6000"                        "%2.4f"         8.6
# Haskell fails these because of different floating point formatting
!H 154 "0.600000"                      "%0f"           0.6
 155 "1"                             "%.0f"          0.6
!H 156 "8.6000e+00"                    "%2.4e"         8.6
!H 157 " 8.6000e+00"                   "% 2.4e"        8.6
# This test is undefined, due to a weird codicil in the
# manpage re zero flag plus precision for non-integral formats.
# 158 " 0008.6000e+00"                 "% 014.4e"      8.6
!H 159 "-8.6000e+00"                   "% 2.4e"        -8.6
!H 160 "+8.6000e+00"                   "%+2.4e"        8.6
!H 161 "8.6"                           "%2.4g"         8.6
 162 "-1"                            "%-i"           -1
 163 "1"                             "%-i"           1
 164 "+1"                            "%+i"           1
 165 "12"                            "%o"            10
# libc fails these, returning "(nil)", which is not
# allowed by the spec. Haskell has no pointer type.
!CH 166 "0x0"                           "%p"            0VLL
!CH 167 "0x0"                           "%p"            0V
# This test is undefined.
#168 "(null)"                        "%s"            0
 169 "%%%%"                          "%s"            "%%%%"
 170 "4294967295"                    "%u"            -1
# Haskell correctly throws an error on these
!H 171 "%w"                            "%w"            -1
# libc fails these, with "" and return -1
!CH 172 "%h"                            "%h"            -1
!CH 173 "%z"                            "%z"            -1
!CH 174 "%j"                            "%j"            -1
# This test is undefined.
#175 ""                              "%F"            -1
# Haskell correctly throws an error on this.
!H 176 "%H"                          "%H"            -1
 177 "%0"                            "%%0"
# Haskell returns "12345"; this is arguably correct for Haskell.
!H 178 "2345"                          "%hx"           74565
 179 "61"                            "%hhx"          'a'
# This test seems hopeless: I don't understand it.
#180 "2345"                          "%hhx"          74565

# Tests from libc
 181 "Hallo heimur"          "Hallo heimur"
 182 "Hallo heimur"          "%s"            "Hallo heimur"
 183 "1024"                  "%d"            1024
 184 "-1024"                 "%d"            -1024
 185 "1024"                  "%i"            1024
 186 "-1024"                 "%i"            -1024
 187 "1024"                  "%u"            1024
 188 "4294966272"            "%u"            4294966272U
 189 "777"                   "%o"            511
 190 "37777777001"           "%o"            4294966785U
 191 "1234abcd"              "%x"            305441741
 192 "edcb5433"              "%x"            3989525555U
 193 "1234ABCD"              "%X"            305441741
 194 "EDCB5433"              "%X"            3989525555U
 195 "x"                     "%c"            'x'
 196 "%"                     "%%"

 197 "Hallo heimur"          "%+s"           "Hallo heimur"
 198 "+1024"                 "%+d"           1024
 199 "-1024"                 "%+d"           -1024
 200 "+1024"                 "%+i"           1024
 201 "-1024"                 "%+i"           -1024
 202 "1024"                  "%+u"           1024
 203 "4294966272"            "%+u"           4294966272U
 204 "777"                   "%+o"           511
 205 "37777777001"           "%+o"           4294966785U
 206 "1234abcd"              "%+x"           305441741
 207 "edcb5433"              "%+x"           3989525555U
 208 "1234ABCD"              "%+X"           305441741
 209 "EDCB5433"              "%+X"           3989525555U
 210 "x"                     "%+c"           'x'

 211 "Hallo heimur"          "% s"           "Hallo heimur"
 212 " 1024"                 "% d"           1024
 213 "-1024"                 "% d"           -1024
 214 " 1024"                 "% i"           1024
 215 "-1024"                 "% i"           -1024
 216 "1024"                  "% u"           1024
 217 "4294966272"            "% u"           4294966272U
 218 "777"                   "% o"           511
 219 "37777777001"           "% o"           4294966785U
 220 "1234abcd"              "% x"           305441741
 221 "edcb5433"              "% x"           3989525555U
 222 "1234ABCD"              "% X"           305441741
 223 "EDCB5433"              "% X"           3989525555U
 224 "x"                     "% c"           'x'

 225 "Hallo heimur"          "%+ s"          "Hallo heimur"
 226 "+1024"                 "%+ d"          1024
 227 "-1024"                 "%+ d"          -1024
 228 "+1024"                 "%+ i"          1024
 229 "-1024"                 "%+ i"          -1024
 230 "1024"                  "%+ u"          1024
 231 "4294966272"            "%+ u"          4294966272U
 232 "777"                   "%+ o"          511
 233 "37777777001"           "%+ o"          4294966785U
 234 "1234abcd"              "%+ x"          305441741
 235 "edcb5433"              "%+ x"          3989525555U
 236 "1234ABCD"              "%+ X"          305441741
 237 "EDCB5433"              "%+ X"          3989525555U
 238 "x"                     "%+ c"          'x'

 239 "0777"                  "%#o"           511
 240 "037777777001"          "%#o"           4294966785U
 241 "0x1234abcd"            "%#x"           305441741
 242 "0xedcb5433"            "%#x"           3989525555U
 243 "0X1234ABCD"            "%#X"           305441741
 244 "0XEDCB5433"            "%#X"           3989525555U
 245 "0"                     "%#o"           0U
 246 "0"                     "%#x"           0U
 247 "0"                     "%#X"           0U

 248 "Hallo heimur"          "%1s"           "Hallo heimur"
 249 "1024"                  "%1d"           1024
 250 "-1024"                 "%1d"           -1024
 251 "1024"                  "%1i"           1024
 252 "-1024"                 "%1i"           -1024
 253 "1024"                  "%1u"           1024
 254 "4294966272"            "%1u"           4294966272U
 255 "777"                   "%1o"           511
 256 "37777777001"           "%1o"           4294966785U
 257 "1234abcd"              "%1x"           305441741
 258 "edcb5433"              "%1x"           3989525555U
 259 "1234ABCD"              "%1X"           305441741
 260 "EDCB5433"              "%1X"           3989525555U
 261 "x"                     "%1c"           'x'

 262 "               Hallo"  "%20s"          "Hallo"
 263 "                1024"  "%20d"          1024
 264 "               -1024"  "%20d"          -1024
 265 "                1024"  "%20i"          1024
 266 "               -1024"  "%20i"          -1024
 267 "                1024"  "%20u"          1024
 268 "          4294966272"  "%20u"          4294966272U
 269 "                 777"  "%20o"          511
 270 "         37777777001"  "%20o"          4294966785U
 271 "            1234abcd"  "%20x"          305441741
 272 "            edcb5433"  "%20x"          3989525555U
 273 "            1234ABCD"  "%20X"          305441741
 274 "            EDCB5433"  "%20X"          3989525555U
 275 "                   x"  "%20c"          'x'

 276 "Hallo               "  "%-20s"         "Hallo"
 277 "1024                "  "%-20d"         1024
 278 "-1024               "  "%-20d"         -1024
 279 "1024                "  "%-20i"         1024
 280 "-1024               "  "%-20i"         -1024
 281 "1024                "  "%-20u"         1024
 282 "4294966272          "  "%-20u"         4294966272U
 283 "777                 "  "%-20o"         511
 284 "37777777001         "  "%-20o"         4294966785U
 285 "1234abcd            "  "%-20x"         305441741
 286 "edcb5433            "  "%-20x"         3989525555U
 287 "1234ABCD            "  "%-20X"         305441741
 288 "EDCB5433            "  "%-20X"         3989525555U
 289 "x                   "  "%-20c"         'x'

 290 "00000000000000001024"  "%020d"         1024
 291 "-0000000000000001024"  "%020d"         -1024
 292 "00000000000000001024"  "%020i"         1024
 293 "-0000000000000001024"  "%020i"         -1024
 294 "00000000000000001024"  "%020u"         1024
 295 "00000000004294966272"  "%020u"         4294966272U
 296 "00000000000000000777"  "%020o"         511
 297 "00000000037777777001"  "%020o"         4294966785U
 298 "0000000000001234abcd"  "%020x"         305441741
 299 "000000000000edcb5433"  "%020x"         3989525555U
 300 "0000000000001234ABCD"  "%020X"         305441741
 301 "000000000000EDCB5433"  "%020X"         3989525555U

 302 "                0777"  "%#20o"         511
 303 "        037777777001"  "%#20o"         4294966785U
 304 "          0x1234abcd"  "%#20x"         305441741
 305 "          0xedcb5433"  "%#20x"         3989525555U
 306 "          0X1234ABCD"  "%#20X"         305441741
 307 "          0XEDCB5433"  "%#20X"         3989525555U

 308 "00000000000000000777"  "%#020o"        511
 309 "00000000037777777001"  "%#020o"        4294966785U
 310 "0x00000000001234abcd"  "%#020x"        305441741
 311 "0x0000000000edcb5433"  "%#020x"        3989525555U
 312 "0X00000000001234ABCD"  "%#020X"        305441741
 313 "0X0000000000EDCB5433"  "%#020X"        3989525555U

 314 "Hallo               "  "%0-20s"        "Hallo"
 315 "1024                "  "%0-20d"        1024
 316 "-1024               "  "%0-20d"        -1024
 317 "1024                "  "%0-20i"        1024
 318 "-1024               "  "%0-20i"        -1024
 319 "1024                "  "%0-20u"        1024
 320 "4294966272          "  "%0-20u"        4294966272U
 321 "777                 "  "%-020o"        511
 322 "37777777001         "  "%-020o"        4294966785U
 323 "1234abcd            "  "%-020x"        305441741
 324 "edcb5433            "  "%-020x"        3989525555U
 325 "1234ABCD            "  "%-020X"        305441741
 326 "EDCB5433            "  "%-020X"        3989525555U
 327 "x                   "  "%-020c"        'x'

 328 "               Hallo"  "%*s"           20 "Hallo"
 329 "                1024"  "%*d"           20 1024
 330 "               -1024"  "%*d"           20 -1024
 331 "                1024"  "%*i"           20 1024
 332 "               -1024"  "%*i"           20 -1024
 333 "                1024"  "%*u"           20 1024
 334 "          4294966272"  "%*u"           20 4294966272U
 335 "                 777"  "%*o"           20 511
 336 "         37777777001"  "%*o"           20 4294966785U
 337 "            1234abcd"  "%*x"           20 305441741
 338 "            edcb5433"  "%*x"           20 3989525555U
 339 "            1234ABCD"  "%*X"           20 305441741
 340 "            EDCB5433"  "%*X"           20 3989525555U
 341 "                   x"  "%*c"           20 'x'

 342 "Hallo heimur"          "%.20s"         "Hallo heimur"
 343 "00000000000000001024"  "%.20d"         1024
 344 "-00000000000000001024" "%.20d"         -1024
 345 "00000000000000001024"  "%.20i"         1024
 346 "-00000000000000001024" "%.20i"         -1024
 347 "00000000000000001024"  "%.20u"         1024
 348 "00000000004294966272"  "%.20u"         4294966272U
 349 "00000000000000000777"  "%.20o"         511
 350 "00000000037777777001"  "%.20o"         4294966785U
 351 "0000000000001234abcd"  "%.20x"         305441741
 352 "000000000000edcb5433"  "%.20x"         3989525555U
 353 "0000000000001234ABCD"  "%.20X"         305441741
 354 "000000000000EDCB5433"  "%.20X"         3989525555U

 355 "               Hallo"  "%20.5s"        "Hallo heimur"
 356 "               01024"  "%20.5d"        1024
 357 "              -01024"  "%20.5d"        -1024
 358 "               01024"  "%20.5i"        1024
 359 "              -01024"  "%20.5i"        -1024
 360 "               01024"  "%20.5u"        1024
 361 "          4294966272"  "%20.5u"        4294966272U
 362 "               00777"  "%20.5o"        511
 363 "         37777777001"  "%20.5o"        4294966785U
 364 "            1234abcd"  "%20.5x"        305441741
 365 "          00edcb5433"  "%20.10x"       3989525555U
 366 "            1234ABCD"  "%20.5X"        305441741
 367 "          00EDCB5433"  "%20.10X"       3989525555U

# This test is undefined. Common sense says libc fails it.
#368 "               Hallo"  "%020.5s"       "Hallo heimur"
 369 "               01024"  "%020.5d"       1024
 370 "              -01024"  "%020.5d"       -1024
 371 "               01024"  "%020.5i"       1024
 372 "              -01024"  "%020.5i"       -1024
 373 "               01024"  "%020.5u"       1024
 374 "          4294966272"  "%020.5u"       4294966272U
 375 "               00777"  "%020.5o"       511
 376 "         37777777001"  "%020.5o"       4294966785U
 377 "            1234abcd"  "%020.5x"       305441741
 378 "          00edcb5433"  "%020.10x"      3989525555U
 379 "            1234ABCD"  "%020.5X"       305441741
 380 "          00EDCB5433"  "%020.10X"      3989525555U

 381 ""                      "%.0s"          "Hallo heimur"
 382 "                    "  "%20.0s"        "Hallo heimur"
 383 ""                      "%.s"           "Hallo heimur"
 384 "                    "  "%20.s"         "Hallo heimur"
 385 "                1024"  "%20.0d"        1024
 386 "               -1024"  "%20.d"         -1024
 387 "                    "  "%20.d"         0
 388 "                1024"  "%20.0i"        1024
 389 "               -1024"  "%20.i"         -1024
 390 "                    "  "%20.i"         0
 391 "                1024"  "%20.u"         1024
 392 "          4294966272"  "%20.0u"        4294966272U
 393 "                    "  "%20.u"         0U
 394 "                 777"  "%20.o"         511
 395 "         37777777001"  "%20.0o"        4294966785U
 396 "                    "  "%20.o"         0U
 397 "            1234abcd"  "%20.x"         305441741
 398 "            edcb5433"  "%20.0x"        3989525555U
 399 "                    "  "%20.x"         0U
 400 "            1234ABCD"  "%20.X"         305441741
 401 "            EDCB5433"  "%20.0X"        3989525555U
 402 "                    "  "%20.X"         0U

 403 "Hallo               "  "% -0+*.*s"     20 5 "Hallo heimur"
 404 "+01024              "  "% -0+*.*d"     20 5 1024
 405 "-01024              "  "% -0+*.*d"     20 5 -1024
 406 "+01024              "  "% -0+*.*i"     20 5 1024
 407 "-01024              "  "% 0-+*.*i"     20 5 -1024
 408 "01024               "  "% 0-+*.*u"     20 5 1024
 409 "4294966272          "  "% 0-+*.*u"     20 5 4294966272U
 410 "00777               "  "%+ -0*.*o"     20 5 511
 411 "37777777001         "  "%+ -0*.*o"     20 5 4294966785U
 412 "1234abcd            "  "%+ -0*.*x"     20 5 305441741
 413 "00edcb5433          "  "%+ -0*.*x"     20 10 3989525555U
 414 "1234ABCD            "  "% -+0*.*X"     20 5 305441741
 415 "00EDCB5433          "  "% -+0*.*X"     20 10 3989525555U
